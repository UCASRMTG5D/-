import numpy as np
from sympy import *
import math

def get_x():
    dim1 = int(input("类别一的个数："))
    list1 = [[int(x) for x in input("类别一的元素，以空格分隔，换行输入下一个元素：").split()] for y in range(dim1)]
    dim2 = int(input("类别二的个数："))
    list2 = [[int(x) for x in input("类别二的元素，以空格分隔，换行输入下一个元素：").split()] for y in range(dim2)] 
    return([list1,list2])

def get_m(list):
    m = np.mean(list, axis=0)
    return(m)

def get_c(list, m):
    listc = []   
    for line in list:
        line = line-m
        line_trans = np.array(line.reshape(-1,1))
        c0 = np.dot(line_trans, np.array([line]))
        listc.append(c0)
    c = np.mean(listc, axis = 0)    
    return(c)

def get_xi(num):
    c = []
    for i in range(1,num+1):
        x = symbols('x'+ str(i))
        c.append(1*x)
    return(c)

def get_d(p,C,m):
    x = np.array(get_xi(len(m)))
    m = np.array(m)
    a = x-m
    #print('a为：',a)
    b = np.dot(a,np.linalg.inv(C))
    #print('b为：',b)
    c = np.dot(b, a.reshape(-1,1))
    #print("c为：",c)
    d = log(p) - 0.5*log(np.linalg.det(C)) - 0.5* c
    #print("d为：",d)
    return(d)

def get_d0(x,p,C,m):        
    x = np.array(x)
    m = np.array(m)
    a = x-m
    #print('a为：',a)
    b = np.dot(a,np.linalg.inv(C))
    #print('b为：',b)
    c = np.dot(b, a.reshape(-1,1))
    #print("c为：",c)
    d = log(p) - 0.5*log(np.linalg.det(C)) - 0.5* c
    #print("d为：",d)
    return(d)
    
p1 = input("类别一的概率：")
p2 = input("类别二的概率：")
allx = get_x()
list1 = np.array(allx[0])
list2 = np.array(allx[1])


m1 = get_m(list1)
m2 = get_m(list2)
c1 = get_c(list1, m1)
c2 = get_c(list2, m2)
d1 = get_d(p1, c1, m1)
d2 = get_d(p2, c2, m2)
y = d1 - d2
y = simplify(y)
print("判别方程为：",y, "=0")

x = [int(x1) for x1 in input("输入x：").split()]
d01 = get_d0(x,p1,c1,m1)
d02 = get_d0(x,p2,c2,m2)
if d01-d02 > 0:
    print("为第一类")
elif d01-d02 == 0:
    print("两类均有可能")
else:
    print("为第二类")
